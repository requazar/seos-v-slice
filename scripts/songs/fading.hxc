import funkin.play.song.Song;
import funkin.play.PlayState;
import funkin.Preferences;
import flixel.FlxSprite;
import funkin.graphics.FunkinSprite;
import funkin.Paths;
import flixel.FlxG;
import funkin.util.Constants;
import funkin.play.PlayStatePlaylist;
import funkin.audio.FunkinSound;
import flixel.tweens.FlxTween;
import flixel.tweens.FlxEase;
import funkin.save.Save;
import funkin.ui.options.PreferencesMenu;

import Date;

class FadingSong extends Song {
  var hasPlayedCutscene:Bool;

  public var COLOR_HEALTH_BAR_PURPLE:FlxColor = 0xFF8E40A5;

	public function new() {
		super('fading');
	}

  public override function onCountdownStart(event:CountdownScriptEvent):Void {
		super.onCountdownStart(event);

    if (!PlayStatePlaylist.isStoryMode) hasPlayedCutscene = true;

    if (!hasPlayedCutscene) {
      trace('Pausing countdown to play cutscene.');

      hasPlayedCutscene = true;

      event.cancel(); // CANCEL THE COUNTDOWN!

      // Play a SFX


      PlayState.instance.currentStage.pause();

      startDialogue();
    }
	}

  function startDialogue() {
    PlayState.instance.startConversation('fading');
  }

  /**
   * Don't replay the cutscene between restarts.
   */
  function onSongRetry(event:ScriptEvent)
  {
    super.onSongRetry(event);

    hasPlayedCutscene = true;
  }

  /**
   * Replay the cutscene after leaving the song.
   */
  function onCreate(event:ScriptEvent):Void
  {
    super.onCreate(event);

    var timeStamp = Date.now().getTime();
    PlayState.instance.discordRPCAlbum = "https://raw.githubusercontent.com/Greeny3483/seos-v-slice/refs/heads/main/images/freeplay/albumRoll/" + PlayState.instance.currentChart.album + ".png?raw=true?t=" + timeStamp;
    PlayState.instance.discordRPCIcon = "https://raw.githubusercontent.com/Greeny3483/seos-v-slice/refs/heads/main/dump/icons/" + PlayState.instance.currentChart.characters.opponent + ".png?raw=true?t=" + timeStamp;

    hasPlayedCutscene = false;
  }

	function onBeatHit(event:SongTimeScriptEvent)
  {
    // When overriding onBeatHit, make sure to call super.onBeatHit,
    // otherwise boppers will not work.
    super.onBeatHit(event);

    if (event.beat == 180 && PlayStatePlaylist.isStoryMode) {
      trace('Hit end of song! Starting outro.');

    }
  }

  public override function onDialogueEnd() {
    // We may need to wait for the outro to play.
    PlayState.instance.currentStage.resume();
    Countdown.performCountdown();
  }

	public function listDifficulties(variationId:String, variationIds:Array<String>, showLocked:Bool):Array<String> {
		if (showLocked || Save.instance.hasBeatenLevel('weekg')) {
			return super.listDifficulties(variationId, variationIds);
		}

		// Hide all difficulties if the player has not beaten the week.
		return [];
	}
}
